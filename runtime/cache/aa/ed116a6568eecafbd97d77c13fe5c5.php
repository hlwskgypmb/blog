<?php
//000000000010
 exit();?>
think_serialize:a:12:{s:2:"id";i:5;s:9:"user_name";s:6:"老白";s:5:"title";s:46:"Java IO的基本操作（三，文件和I/O）";s:4:"cont";s:9185:"[strong]Java File类[/strong][br]
Java文件类以抽象的方式代表文件名和目录路径名。该类主要用于文件和目录的创建、文件的查找和文件的删除等。
File对象代表磁盘中实际存在的文件和目录。通过以下构造方法创建一个File对象。
[table][colgroup:2]
[thead]
[tr][th] 方法[/th][th] 描述[/th][/tr]
[/thead]
[tbody]
[tr][td] File(File parent, String child); [/td][td] 通过给定的父抽象路径名和子路径名字符串创建一个新的File实例。[/td][/tr]
[tr][td] File(String pathname) [/td][td] 通过将给定路径名字符串转换成抽象路径名来创建一个新 File 实例。  [/td][/tr]
[tr][td] File(String parent, String child) [/td][td] 根据 parent 路径名字符串和 child 路径名字符串创建一个新 File 实例。  [/td][/tr]
[tr][td] File(URI uri) [/td][td] 通过将给定的 file: URI 转换成一个抽象路径名来创建一个新的 File 实例。 [/td][/tr]
[/tbody]
[/table]
创建File对象成功后，可以使用以下列表中的方法操作文件。
[table][colgroup:2]
[thead]
[tr][th] 方法[/th][th] 描述[/th][/tr]
[/thead]
[tbody]
[tr][td] public String getName() [/td][td] 返回由此抽象路径名表示的文件或目录的名称。 [/td][/tr]
[tr][td] public String getParent() [/td][td] 返回此抽象路径名的父路径名的路径名字符串，如果此路径名没有指定父目录，则返回 null。[/td][/tr]
[tr][td] public File getParentFile() [/td][td] 返回此抽象路径名的父路径名的抽象路径名，如果此路径名没有指定父目录，则返回 null。 [/td][/tr]
[tr][td] public String getPath() [/td][td] 将此抽象路径名转换为一个路径名字符串。[/td][/tr]
[tr][td] public boolean isAbsolute() [/td][td] 测试此抽象路径名是否为绝对路径名。[/td][/tr]
[tr][td] public String getAbsolutePath() [/td][td] 返回抽象路径名的绝对路径名字符串。[/td][/tr]
[tr][td] public boolean canRead() [/td][td] 测试应用程序是否可以读取此抽象路径名表示的文件。 [/td][/tr]
[tr][td] public boolean canWrite() [/td][td] 测试应用程序是否可以修改此抽象路径名表示的文件。[/td][/tr]
[tr][td] public boolean exists() [/td][td] 测试此抽象路径名表示的文件或目录是否存在。 [/td][/tr]
[tr][td] public boolean isDirectory() [/td][td] 测试此抽象路径名表示的文件是否是一个目录。[/td][/tr]
[tr][td] public boolean isFile() [/td][td] 测试此抽象路径名表示的文件是否是一个标准文件。[/td][/tr]
[tr][td] public long lastModified() [/td][td] 返回此抽象路径名表示的文件最后一次被修改的时间。[/td][/tr]
[tr][td] public long length() [/td][td] 返回由此抽象路径名表示的文件的长度。[/td][/tr]
[tr][td] public boolean createNewFile() throws IOException [/td][td] 当且仅当不存在具有此抽象路径名指定的名称的文件时，原子地创建由此抽象路径名指定的一个新的空文件。[/td][/tr]
[tr][td] public boolean delete() [/td][td] 删除此抽象路径名表示的文件或目录。[/td][/tr]
[tr][td] public void deleteOnExit() [/td][td] 在虚拟机终止时，请求删除此抽象路径名表示的文件或目录。[/td][/tr]
[tr][td] public String[] list() [/td][td] 返回由此抽象路径名所表示的目录中的文件和目录的名称所组成字符串数组。[/td][/tr]
[tr][td] public String[] list(FilenameFilter filter) [/td][td] 返回由包含在目录中的文件和目录的名称所组成的字符串数组，这一目录是通过满足指定过滤器的抽象路径名来表示的。[/td][/tr]
[tr][td] public File[] listFiles() [/td][td] 返回一个抽象路径名数组，这些路径名表示此抽象路径名所表示目录中的文件。 [/td][/tr]
[tr][td] public File[] listFiles(FileFilter filter) [/td][td] 返回表示此抽象路径名所表示目录中的文件和目录的抽象路径名数组，这些路径名满足特定过滤器。 [/td][/tr]
[tr][td] public boolean mkdir() [/td][td] 创建此抽象路径名指定的目录。 [/td][/tr]
[tr][td] public boolean mkdirs() [/td][td] 创建此抽象路径名指定的目录，包括创建必需但不存在的父目录。 [/td][/tr]
[tr][td] public boolean renameTo(File dest) [/td][td] 重新命名此抽象路径名表示的文件。 [/td][/tr]
[tr][td] public boolean setLastModified(long time) [/td][td] 设置由此抽象路径名所指定的文件或目录的最后一次修改时间。 [/td][/tr]
[tr][td] public boolean setReadOnly() [/td][td] 标记此抽象路径名指定的文件或目录，以便只可对其进行读操作。 [/td][/tr]
[tr][td] public static File createTempFile(String prefix, String suffix, File directory) throws IOEx[td] 在指定目录中创建一个新的空文件，使用给定的前缀和后缀字符串生成其名称。 [/td][/tr]
[tr][td] public static File createTempFile(String prefix, String suffix) throws IOException [/td][td] 在默认临时文件目录中创建一个空文件，使用给定前缀和后缀生成其名称。 [/td][/tr]
[tr][td] public int compareTo(File pathname) [/td][td] 按字母顺序比较两个抽象路径名。 [/td][/tr]
[tr][td] public int compareTo(Object o) [/td][td] 按字母顺序比较抽象路径名与给定对象。 [/td][/tr]
[tr][td] public boolean equals(Object obj) [/td][td] 测试此抽象路径名与给定对象是否相等。 [/td][/tr]
[tr][td] public String toString() [/td][td] 返回此抽象路径名的路径名字符串。 [/td][/tr]
[/tbody]
[/table]
[strong]Java FileReader类[/strong][br]
FileReader类从InputStreamReader类继承而来。该类按字符读取流中数据。可以通过以下几种构造方法创建需要的对象。
[table][colgroup:2]
[thead]
[tr][th] 方法 [/th][th] 描述 [/th][/tr]
[/thead]
[tbody]
[tr][td] FileReader(File file) [/td][td] 在给定从中读取数据的 File 的情况下创建一个新 FileReader。 [/td][/tr]
[tr][td] FileReader(FileDescriptor fd) [/td][td] 在给定从中读取数据的 FileDescriptor 的情况下创建一个新 FileReader。 [/td][/tr]
[tr][td] FileReader(String fileName)  [/td][td] 在给定从中读取数据的文件名的情况下创建一个新 FileReader。 [/td][/tr]
[/tbody]
[/table]
创建FIleReader对象成功后，可以参照以下列表里的方法操作文件。
[table][colgroup:2]
[thead]
[tr][th] 方法 [/th][th] 描述 [/th][/tr]
[/thead]
[tbody]
[tr][td] public int read() throws IOException[/td][td] 读取单个字符，返回一个int型变量代表读取到的字符[/td][/tr]
[tr][td] public int read(char [] c, int offset, int len) [/td][td] 读取字符到c数组，返回读取到字符的个数 [/td][/tr]
[/tbody]
[/table]
[strong]Java FileWriter类[/strong][br]
FileWriter 类从 OutputStreamWriter 类继承而来。该类按字符向流中写入数据。可以通过以下几种构造方法创建需要的对象。
[table][colgroup:2]
[thead]
[tr][th] 方法 [/th][th] 描述 [/th][/tr]
[/thead]
[tbody]
[tr][td] FileWriter(File file)[/td][td] 在给出 File 对象的情况下构造一个 FileWriter 对象。[/td][/tr]
[tr][td]  FileWriter(File file, boolean append) [/td][td] 在给出 File 对象的情况下构造一个 FileWriter 对象。[/td][/tr]
[tr][td] FileWriter(FileDescriptor fd)[/td][td] 构造与某个文件描述符相关联的 FileWriter 对象。[/td][/tr]
[tr][td] FileWriter(String fileName, boolean append) [/td][td] 在给出文件名的情况下构造 FileWriter 对象，它具有指示是否挂起写入数据的 boolean 值。 [/td][/tr]
[/tbody]
[/table]
创建FileWriter对象成功后，可以参照以下列表里的方法操作文件。
[table][colgroup:2]
[thead]
[tr][th] 方法 [/th][th] 描述 [/th][/tr]
[/thead]
[tbody]
[tr][td] public void write(int c) throws IOException[/td][td] 写入单个字符c。[/td][/tr]
[tr][td] public void write(char [] c, int offset, int len)[/td][td] 写入字符数组中开始为offset长度为len的某一部分。[/td][/tr]
[tr][td] public void write(String s, int offset, int len)[/td][td] 写入字符串中开始为offset长度为len的某一部分。 [/td][/tr]
[/tbody]
[/table]
[strong]Java中的目录[/strong][br]
创建目录：
File类中有两个方法可以用来创建文件夹：
[table][colgroup:2]
[thead]
[tr][th]方法[/th][th]描述 [/th][/tr]
[/thead]
[tbody]
[tr][td] mkdir( ) [/td][td]方法创建一个文件夹，成功则返回true，失败则返回false。失败表明File对象指定的路径已经存在，或者由于整个路径还不存在，该文件夹不能被创建。 [/td][/tr]
[tr][td]mkdirs() [/td][td] 方法创建一个文件夹和它的所有父文件夹。 [/td][/tr]
[/tbody]
[/table]
[strong]读取目录[/strong][br]
一个目录其实就是一个 File 对象，它包含其他文件和文件夹。
如果创建一个 File 对象并且它是一个目录，那么调用 isDirectory() 方法会返回 true。
可以通过调用该对象上的 list() 方法，来提取它包含的文件和文件夹的列表。
[strong]删除目录或文件[/strong][br]
删除文件可以使用 java.io.File.delete() 方法。";s:6:"to_top";i:0;s:3:"pic";s:58:"/static/head/20170726/e622618cf8c469ef33c5a5e31dc2f58c.png";s:7:"see_num";i:16;s:9:"argue_num";i:0;s:7:"is_best";i:0;s:11:"create_time";s:19:"2018-09-06 10:26:23";s:7:"type_id";i:2;s:4:"type";s:4:"JAVA";}